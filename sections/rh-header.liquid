{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "header",
      "content": "Logo Settings"
    },
    {
      "type": "image_picker",
      "id": "logo_image",
      "label": "Logo Image",
      "info": "Upload a logo image. If no image is provided, the logo text will be used."
    },
    {
      "type": "text",
      "id": "logo_text",
      "label": "Logo Text",
      "default": "care academia",
      "info": "Fallback text if no logo image is provided"
    },
    {
      "type": "range",
      "id": "logo_width",
      "label": "Logo Width",
      "min": 50,
      "max": 300,
      "step": 10,
      "default": 150,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Navigation Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_dropdowns",
      "label": "Enable Dropdown Menus",
      "default": true,
      "info": "If disabled, navigation items will be simple links without dropdowns"
    },
    {
      "type": "link_list",
      "id": "main_menu",
      "label": "Main Menu",
      "info": "Select a menu for the main navigation. This will be used when dropdowns are disabled."
    },
    {
      "type": "link_list",
      "id": "dropdown_menu",
      "label": "Dropdown Menu",
      "info": "Select a menu for dropdown navigation. This will be used when dropdowns are enabled."
    },
    {
      "type": "header",
      "content": "Search Settings"
    },
    {
      "type": "text",
      "id": "search_placeholder",
      "label": "Search Placeholder",
      "default": "What do you want to learn today?"
    },
    {
      "type": "header",
      "content": "Action Buttons"
    },
    {
      "type": "text",
      "id": "contact_sales_text",
      "label": "Contact Sales Text",
      "default": "Contact Sales"
    },
    {
      "type": "url",
      "id": "contact_sales_url",
      "label": "Contact Sales URL"
    },
    {
      "type": "text",
      "id": "sign_in_text",
      "label": "Sign In Text",
      "default": "Sign in"
    },
    {
      "type": "url",
      "id": "sign_in_url",
      "label": "Sign In URL"
    },
    {
      "type": "text",
      "id": "view_plans_text",
      "label": "View Plans Text",
      "default": "View Plans"
    }
  ],
  "blocks": [
    {
      "type": "plan_option",
      "name": "Plan Option",
      "settings": [
        {
          "type": "text",
          "id": "plan_title",
          "label": "Plan Title",
          "default": "Plan Option"
        },
        {
          "type": "url",
          "id": "plan_url",
          "label": "Plan URL"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Header"
    }
  ]
}
{% endschema %}

{% style %}
.header__rh *{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
.header__rh {
    width: 100%;
    background-color: white;
    box-shadow: 0 2px 8px rgba(34, 40, 117, 0.08);
    position: sticky;
    top: 0;
    z-index: 50;
    padding: 20px;
  }
  
  .header-container__rh {
    max-width: 1440px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-height: 56px;
  }
  
  /* Logo */
  .logo__rh {
    font-weight: 700;
    color: hsl(237, 67%, 29%);
    font-size: clamp(20px, 2.5vw, 24px);
    font-family: 'Inter', sans-serif;
    line-height: 1.2;
  }
  
  .logo-link__rh {
    text-decoration: none;
    color: inherit;
    display: inline-block;
    transition: opacity 0.2s ease;
  }
  
  .logo-link__rh:hover {
    opacity: 0.8;
  }
  
  .logo-image__rh {
    max-width: 100%;
    height: auto;
    display: block;
  }
  
  .logo-text__rh {
    color: hsl(237, 67%, 29%);
    font-weight: 700;
    font-size: clamp(20px, 2.5vw, 24px);
    font-family: "Ghost Trial", sans-serif;
    line-height: 1.2;
  }
  
  /* Header Sections */
  .header-left__rh {
    display: flex;
    align-items: center;
    gap: clamp(20px, 2.5vw, 40px);
  }
  
  .header-right__rh {
    display: flex;
    align-items: center;
    gap: clamp(8px, 1vw, 16px);
  }
  
  /* Desktop Navigation */
  .desktop-nav__rh {
    display: none;
    align-items: center;
    gap: clamp(16px, 2vw, 24px);
  }
  
  @media (min-width: 1024px) {
    .desktop-nav__rh {
      display: flex;
    }
  }
  
  .nav-item__rh {
    position: relative;
  }
  
  .nav-button__rh {
    display: flex;
    align-items: center;
    gap: clamp(4px, 0.5vw, 8px);
    color: hsl(237, 67%, 29%);
    font-size: clamp(14px, 1.6vw, 16px);
    font-family: "Karla", sans-serif;
    font-weight: 400;
    line-height: 24px;
    letter-spacing: 0.08px;
    padding: 8px 0;
    background: none;
    border: none;
    cursor: pointer;
    transition: opacity 0.2s ease;
  }
  
  .nav-button__rh:hover {
    opacity: 0.8;
  }
  
  .nav-link__rh {
    text-decoration: none;
  }
  
  .nav-link__rh:hover {
    opacity: 0.8;
  }
  
  .dropdown-arrow__rh {
    display: flex;
    align-items: center;
    justify-content: center;
    color: hsl(237, 67%, 29%);
    transition: transform 0.2s ease;
  }
  
  .nav-button__rh[aria-expanded="true"] .dropdown-arrow__rh {
    transform: rotate(180deg);
  }
  
  /* Dropdown Menu */
  .dropdown-menu__rh {
    position: absolute;
    top: 100%;
    left: 0;
    margin-top: 8px;
    background: white;
    border: 1px solid hsl(0, 0%, 93%);
    border-radius: 8px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    padding: 8px 0;
    min-width: 200px;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.2s ease;
  }
  
  .dropdown-menu__rh.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  
  .dropdown-item__rh {
    display: block;
    padding: 8px 16px;
    color: hsl(237, 67%, 29%);
    font-size: clamp(14px, 1.6vw, 16px);
    font-family: "Karla", sans-serif;
    text-decoration: none;
    transition: background-color 0.15s ease;
  }
  
  .dropdown-item__rh:hover {
    background-color: hsl(0, 0%, 96%);
  }
  
  /* Search Container */
  .search-container__rh {
    display: none;
  }
  
  .search-form__rh {
    width: 100%;
  }
  
  @media (min-width: 768px) {
    .search-container__rh {
      display: block;
    }
  }
  
  .search-input__rh {
    display: flex;
    align-items: center;
    background-color: hsl(0, 0%, 96%);
    border: 1px solid hsl(0, 0%, 93%);
    border-radius: 9999px;
    padding: 8px 12px;
    max-width: 320px;
    height: 36px;
  }
  
  .search-icon__rh {
    margin-right: 8px;
    flex-shrink: 0;
    color: hsl(0, 0%, 43%);
  }
  
  .search-field__rh {
    background: transparent;
    border: none;
    outline: none;
    flex: 1;
    color: hsl(237, 67%, 29%);
    font-size: clamp(12px, 1.4vw, 14px);
    font-family: "Karla", sans-serif;
    font-weight: 400;
    line-height: 21px;
    letter-spacing: 0.07px;
  }
  
  .search-field__rh :focus-visible{
    box-shadow: none !important;
    outline: none;
  }
  .search-field__rh::placeholder {
    color: hsl(0, 0%, 71%);
  }
  
  /* Divider */
  .divider__rh {
    display: none;
    width: 1px;
    height: 36px;
    background-color: hsl(0, 0%, 93%);
  }
  
  @media (min-width: 1024px) {
    .divider__rh {
      display: block;
    }
  }
  
  /* Actions */
  .actions__rh {
    display: none;
    align-items: center;
    gap: clamp(16px, 2vw, 24px);
  }
  
  @media (min-width: 1024px) {
    .actions__rh {
      display: flex;
    }
  }
  
  .action-link__rh {
    color: hsl(0, 0%, 43%);
    font-size: clamp(12px, 1.4vw, 14px);
    font-family: "Karla", sans-serif;
    font-weight: 400;
    line-height: 21px;
    letter-spacing: 0.07px;
    text-decoration: none;
    transition: color 0.2s ease;
  }
  
  .action-link__rh.sign-in-button__rh {
    display: flex;
    align-items: center;
    gap: clamp(4px, 0.5vw, 8px);
    background-color: hsl(0, 0%, 5%);
    color: white;
    border: none;
    border-radius: 6px;
    padding: 8px 16px;
    font-size: clamp(12px, 1.4vw, 14px);
    font-family: "Karla", sans-serif;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s ease;
    white-space: nowrap;
  }
  
  .action-link__rh.sign-in-button__rh:hover {
    background-color: hsl(0, 0%, 15%);
    color: white;
  }
  
  .action-link__rh:hover {
    color: hsl(237, 67%, 29%);
  }
  
  .view-plans-button__rh {
    display: flex;
    align-items: center;
    gap: clamp(4px, 0.5vw, 8px);
    background-color: hsl(0, 0%, 5%);
    color: white;
    border: none;
    border-radius: 3px;
    padding: 8px 16px;
    height: 36px;
    font-size: clamp(12px, 1.4vw, 14px);
    font-family: 'Inter', sans-serif;
    font-weight: 600;
    line-height: 21px;
    letter-spacing: 0.07px;
    cursor: pointer;
    transition: opacity 0.2s ease;
  }
  
  .view-plans-button__rh:hover {
    opacity: 0.9;
  }
  
  .view-plans-button__rh .dropdown-arrow__rh {
    color: white;
  }
  
  /* Mobile Menu Button */
  .mobile-menu-button__rh {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 32px;
    height: 32px;
    background: none;
    border: none;
    cursor: pointer;
  }
  
  @media (min-width: 1024px) {
    .mobile-menu-button__rh {
      display: none;
    }
  }
  
  .hamburger__rh {
    display: flex;
    flex-direction: column;
    width: 24px;
    height: 16px;
    justify-content: space-between;
  }
  
  .hamburger__rh span {
    display: block;
    height: 2px;
    width: 100%;
    background-color: hsl(237, 67%, 29%);
    transition: all 0.3s ease;
  }
  
  .mobile-menu-button__rh.active .hamburger__rh span:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }
  
  .mobile-menu-button__rh.active .hamburger__rh span:nth-child(2) {
    opacity: 0;
  }
  
  .mobile-menu-button__rh.active .hamburger__rh span:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }
  
  /* Mobile Menu */
  .mobile-menu__rh {
    display: none;
    background: white;
    border-top: 1px solid hsl(0, 0%, 93%);
    padding: 16px clamp(120px, 15vw, 244px);
  }
  
  @media (min-width: 1024px) {
    .mobile-menu__rh {
      display: none !important;
    }
  }
  
  .mobile-menu__rh.show {
    display: block;
  }
  
  .mobile-search__rh {
    display: flex;
    align-items: center;
    background-color: hsl(0, 0%, 96%);
    border: 1px solid hsl(0, 0%, 93%);
    border-radius: 9999px;
    padding: 8px 12px;
    margin-bottom: 24px;
    height: 36px;
    width: 100%;
  }
  
  .mobile-nav__rh {
    margin-bottom: 24px;
  }
  
  .mobile-nav-item__rh {
    border-bottom: 1px solid hsl(0, 0%, 93%);
    padding-bottom: 8px;
    margin-bottom: 8px;
  }
  
  .mobile-nav-button__rh {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 8px 0;
    background: none;
    border: none;
    color: hsl(237, 67%, 29%);
    font-size: clamp(14px, 1.6vw, 16px);
    font-family: "Karla", sans-serif;
    font-weight: 400;
    cursor: pointer;
    text-align: left;
  }
  
  .mobile-nav-link__rh {
    text-decoration: none;
    justify-content: flex-start;
  }
  
  .mobile-dropdown__rh {
    margin-top: 8px;
    padding-left: 16px;
    display: none;
  }
  
  .mobile-dropdown__rh.show {
    display: block;
  }
  
  .mobile-dropdown-item__rh {
    display: block;
    padding: 4px 0;
    color: hsl(0, 0%, 43%);
    font-size: clamp(12px, 1.4vw, 14px);
    font-family: "Karla", sans-serif;
    text-decoration: none;
  }
  
  .mobile-actions__rh {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }
  
  .mobile-action-link__rh {
    display: block;
    padding: 8px 0;
    color: hsl(0, 0%, 43%);
    font-size: clamp(12px, 1.4vw, 14px);
    font-family: "Karla", sans-serif;
    text-decoration: none;
  }
  
  .mobile-action-link__rh.sign-in-button__rh {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: hsl(0, 0%, 5%);
    color: white;
    border: none;
    border-radius: 6px;
    padding: 12px 16px;
    font-size: clamp(12px, 1.4vw, 14px);
    font-family: "Karla", sans-serif;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-top: 8px;
  }
  
  .mobile-action-link__rh.sign-in-button__rh:hover {
    background-color: hsl(0, 0%, 15%);
    color: white;
  }
  
  .mobile-view-plans__rh {
    width: 100%;
    background-color: hsl(0, 0%, 5%);
    color: white;
    border: none;
    border-radius: 3px;
    padding: 12px;
    font-size: clamp(12px, 1.4vw, 14px);
    font-family: 'Inter', sans-serif;
    font-weight: 600;
    cursor: pointer;
  }
  
  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .header-container__rh {
      padding-left: clamp(8px, 1vw, 16px);
      padding-right: clamp(8px, 1vw, 16px);
    }
    
    .header-left__rh {
      gap: clamp(8px, 1vw, 16px);
    }
    
    .mobile-menu__rh {
      padding-left: clamp(8px, 1vw, 16px);
      padding-right: clamp(8px, 1vw, 16px);
    }
  }
  
  
  /* Focus states for accessibility */
  .nav-button__rh:focus,
  .action-link__rh:focus,
  .view-plans-button__rh:focus,
  .mobile-nav-button__rh:focus {
    outline: none;
  }
  
  .search-field__rh:focus {
    outline: none;
  }
  
  /* Animation keyframes */
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  /* @media (max-width:1390px) and (min-width:1024px){
    .desktop-nav__rh{
        gap: 5px ;
    }
    .header-container__rh{
        gap: 10px;
    }
    .header-right__rh{
        gap: 5px;
    }
    .actions__rh{
    gap: 5px;
    }
    .header-left__rh{
        gap: 10px;
    }
    .nav-button__rh, .action-link__rh{
        font-size: 12px;
        white-space: nowrap
    }
    .search-input__rh{
        max-width: 250px;
        overflow: hidden;
    }
    .view-plans-button__rh{
        font-size: 12px;
        padding: 4px 8px;
        height: 28px
    }
} */


{% endstyle %}

<header class="header__rh">
        <div class="header-container__rh">
            <!-- Logo and Navigation -->
            <div class="header-left__rh">
                <div class="logo__rh">
                    {% if section.settings.logo_image != blank %}
                        <a href="{{ routes.root_url }}" class="logo-link__rh">
                            {{ section.settings.logo_image | image_url: width: section.settings.logo_width | image_tag: 
                               alt: section.settings.logo_text | default: 'Logo',
                               class: 'logo-image__rh',
                               loading: 'eager',
                               width: section.settings.logo_width,
                               height: 'auto' }}
                        </a>
                    {% else %}
                        <a href="{{ routes.root_url }}" class="logo-link__rh logo-text__rh">
                            {{ section.settings.logo_text | default: 'care academia' }}
                        </a>
                    {% endif %}
                </div>

                <!-- Desktop Navigation -->
                <nav class="desktop-nav__rh">
                    {% if section.settings.enable_dropdowns %}
                        {% comment %} Use dropdown menu when dropdowns are enabled {% endcomment %}
                        {% assign menu = linklists[section.settings.dropdown_menu] %}
                        {% if menu.links.size > 0 %}
                            {% for link in menu.links %}
                                {% assign nav_id = link.title | handle %}
                                <div class="nav-item__rh" data-dropdown="{{ nav_id }}">
                                    {% if link.links.size > 0 %}
                                        <button class="nav-button__rh" aria-expanded="false" aria-haspopup="true">
                                            <span>{{ link.title }}</span>
                                            <div class="dropdown-arrow__rh">
                                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                    <polyline points="6,9 12,15 18,9"></polyline>
                                                </svg>
                                            </div>
                                        </button>
                                        <div class="dropdown-menu__rh" id="dropdown-{{ nav_id }}">
                                            {% for child_link in link.links %}
                                                <a href="{{ child_link.url }}" class="dropdown-item__rh">{{ child_link.title }}</a>
                                            {% endfor %}
                                        </div>
                                    {% else %}
                                        <a href="{{ link.url }}" class="nav-button__rh nav-link__rh">
                                            <span>{{ link.title }}</span>
                                        </a>
                                    {% endif %}
                                </div>
                            {% endfor %}
                        {% endif %}
                    {% else %}
                        {% comment %} Use main menu when dropdowns are disabled {% endcomment %}
                        {% assign menu = linklists[section.settings.main_menu] %}
                        {% if menu.links.size > 0 %}
                            {% for link in menu.links %}
                                <div class="nav-item__rh">
                                    <a href="{{ link.url }}" class="nav-button__rh nav-link__rh">
                                        <span>{{ link.title }}</span>
                                    </a>
                                </div>
                            {% endfor %}
                        {% endif %}
                    {% endif %}
                </nav>
            </div>

            <!-- Right Section -->
            <div class="header-right__rh">
                <!-- Search Bar -->
                <div class="search-container__rh">
                    <form action="{{ routes.search_url }}" method="get" class="search-form__rh">
                        <div class="search-input__rh">
                            <svg class="search-icon__rh" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="11" cy="11" r="8"></circle>
                                <path d="m21 21-4.35-4.35"></path>
                            </svg>
                            <input
                                type="search"
                                name="q"
                                placeholder="{{ section.settings.search_placeholder | default: 'What do you want to learn today?' }}"
                                class="search-field__rh"
                                value="{{ search.terms | escape }}"
                                autocomplete="off"
                            />
                        </div>
                    </form>
                </div>

                <!-- Divider -->
                <div class="divider__rh"></div>

                <!-- Action Items -->
                <div class="actions__rh">
                    <a href="{{ section.settings.contact_sales_url | default: '/pages/contact' }}" class="action-link__rh">{{ section.settings.contact_sales_text | default: 'Contact Sales' }}</a>
                    
                    {% unless customer %}
                        <a href="{{ section.settings.sign_in_url | default: routes.account_login_url | default: routes.account_url }}" class="action-link__rh sign-in-button__rh">{{ section.settings.sign_in_text | default: 'Sign in' }}</a>
                    {% endunless %}
                    
                    {% comment %} <div class="nav-item__rh" data-dropdown="view-plans">
                        <button class="view-plans-button__rh" aria-expanded="false" aria-haspopup="true">
                            <span>{{ section.settings.view_plans_text | default: 'View Plans' }}</span>
                            <div class="dropdown-arrow__rh">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <polyline points="6,9 12,15 18,9"></polyline>
                                </svg>
                            </div>
                        </button>
                        <div class="dropdown-menu__rh" id="dropdown-view-plans">
                            {% for block in section.blocks %}
                                {% if block.type == 'plan_option' %}
                                    <a href="{{ block.settings.plan_url | default: '#' }}" class="dropdown-item__rh">{{ block.settings.plan_title }}</a>
                                {% endif %}
                            {% endfor %}
                        </div>
                    </div> {% endcomment %}
                </div>
            </div>

            <!-- Mobile Menu Button -->
            <button class="mobile-menu-button__rh" aria-label="Toggle mobile menu">
                <div class="hamburger__rh">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            </button>
        </div>

        <!-- Mobile Menu -->
        <div class="mobile-menu__rh" id="mobile-menu">
            <!-- Mobile Search -->
            <form action="{{ routes.search_url }}" method="get" class="mobile-search__rh">
                <svg class="search-icon__rh" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="11" cy="11" r="8"></circle>
                    <path d="m21 21-4.35-4.35"></path>
                </svg>
                <input
                    type="search"
                    name="q"
                    placeholder="{{ section.settings.search_placeholder | default: 'What do you want to learn today?' }}"
                    class="search-field__rh"
                    value="{{ search.terms | escape }}"
                    autocomplete="off"
                />
            </form>

            <!-- Mobile Navigation -->
            <nav class="mobile-nav__rh">
                {% if section.settings.enable_dropdowns %}
                    {% comment %} Use dropdown menu when dropdowns are enabled {% endcomment %}
                    {% assign menu = linklists[section.settings.dropdown_menu] %}
                    {% if menu.links.size > 0 %}
                        {% for link in menu.links %}
                            {% assign nav_id = link.title | handle %}
                            <div class="mobile-nav-item__rh">
                                {% if link.links.size > 0 %}
                                    <button class="mobile-nav-button__rh" data-mobile-dropdown="{{ nav_id }}">
                                        <span>{{ link.title }}</span>
                                        <div class="dropdown-arrow__rh">
                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <polyline points="6,9 12,15 18,9"></polyline>
                                            </svg>
                                        </div>
                                    </button>
                                    <div class="mobile-dropdown__rh" id="mobile-dropdown-{{ nav_id }}">
                                        {% for child_link in link.links %}
                                            <a href="{{ child_link.url }}" class="mobile-dropdown-item__rh">{{ child_link.title }}</a>
                                        {% endfor %}
                                    </div>
                                {% else %}
                                    <a href="{{ link.url }}" class="mobile-nav-button__rh mobile-nav-link__rh">
                                        <span>{{ link.title }}</span>
                                    </a>
                                {% endif %}
                            </div>
                        {% endfor %}
                    {% endif %}
                {% else %}
                    {% comment %} Use main menu when dropdowns are disabled {% endcomment %}
                    {% assign menu = linklists[section.settings.main_menu] %}
                    {% if menu.links.size > 0 %}
                        {% for link in menu.links %}
                            <div class="mobile-nav-item__rh">
                                <a href="{{ link.url }}" class="mobile-nav-button__rh mobile-nav-link__rh">
                                    <span>{{ link.title }}</span>
                                </a>
                            </div>
                        {% endfor %}
                    {% endif %}
                {% endif %}
            </nav>

            <!-- Mobile Actions -->
            <div class="mobile-actions__rh">
                <a href="{{ section.settings.contact_sales_url | default: '/pages/contact' }}" class="mobile-action-link__rh">{{ section.settings.contact_sales_text | default: 'Contact Sales' }}</a>
                
                {% unless customer %}
                    <a href="{{ section.settings.sign_in_url | default: routes.account_login_url | default: routes.account_url }}" class="mobile-action-link__rh sign-in-button__rh">{{ section.settings.sign_in_text | default: 'Sign in' }}</a>
                {% endunless %}
                
            </div>
        </div>
    </header>
    <script>
        class CareAcademiaHeader {
    constructor() {
        this.activeDropdown = null;
        this.isMobileMenuOpen = false;
        this.init();
    }

    init() {
        this.bindEvents();
        this.setupClickOutside();
    }

    bindEvents() {
        // Desktop dropdown buttons (only actual buttons, not links)
        const desktopNavButtons = document.querySelectorAll('.desktop-nav__rh .nav-button__rh:not(.nav-link__rh)');
        desktopNavButtons.forEach(button => {
            button.addEventListener('click', (e) => this.handleDesktopDropdown(e));
        });

        // Mobile menu toggle
        const mobileMenuButton = document.querySelector('.mobile-menu-button__rh');
        if (mobileMenuButton) {
            mobileMenuButton.addEventListener('click', () => this.toggleMobileMenu());
        }

        // Mobile dropdown buttons (only actual buttons, not links)
        const mobileNavButtons = document.querySelectorAll('.mobile-nav-button__rh:not(.mobile-nav-link__rh)');
        mobileNavButtons.forEach(button => {
            button.addEventListener('click', (e) => this.handleMobileDropdown(e));
        });

        // Keyboard navigation
        document.addEventListener('keydown', (e) => this.handleKeyboard(e));

        // Close dropdowns on window resize
        window.addEventListener('resize', () => this.closeAllDropdowns());
    }

    handleDesktopDropdown(event) {
        event.preventDefault();
        event.stopPropagation();
        
        const button = event.currentTarget;
        const navItem = button.closest('.nav-item__rh');
        const dropdownId = navItem.getAttribute('data-dropdown');
        const dropdown = document.getElementById(`dropdown-${dropdownId}`);
        
        // Check if this is a simple link (no dropdown)
        if (button.classList.contains('nav-link__rh')) {
            return; // Let the link work normally
        }
        
        if (!dropdown) return;

        // Close other dropdowns
        this.closeAllDropdowns();

        // Toggle current dropdown
        if (this.activeDropdown === dropdownId) {
            this.closeDropdown(dropdownId);
        } else {
            this.openDropdown(dropdownId);
        }
    }

    handleMobileDropdown(event) {
        event.preventDefault();
        event.stopPropagation();
        
        const button = event.currentTarget;
        
        // Check if this is a simple link (no dropdown)
        if (button.classList.contains('mobile-nav-link__rh')) {
            return; // Let the link work normally
        }
        
        const dropdownId = button.getAttribute('data-mobile-dropdown');
        const dropdown = document.getElementById(`mobile-dropdown-${dropdownId}`);
        
        if (!dropdown) return;

        const isOpen = dropdown.classList.contains('show');
        
        // Close all mobile dropdowns
        const allMobileDropdowns = document.querySelectorAll('.mobile-dropdown__rh');
        allMobileDropdowns.forEach(dd => {
            dd.classList.remove('show');
        });

        // Reset all mobile dropdown arrows
        const allMobileButtons = document.querySelectorAll('.mobile-nav-button__rh:not(.mobile-nav-link__rh) .dropdown-arrow__rh');
        allMobileButtons.forEach(arrow => {
            arrow.style.transform = 'rotate(0deg)';
        });

        // Toggle current dropdown
        if (!isOpen) {
            dropdown.classList.add('show');
            const arrow = button.querySelector('.dropdown-arrow__rh');
            if (arrow) {
                arrow.style.transform = 'rotate(180deg)';
            }
        }
    }

    openDropdown(dropdownId) {
        const dropdown = document.getElementById(`dropdown-${dropdownId}`);
        const button = document.querySelector(`[data-dropdown="${dropdownId}"] .nav-button__rh`);
        
        if (dropdown && button) {
            dropdown.classList.add('show');
            button.setAttribute('aria-expanded', 'true');
            this.activeDropdown = dropdownId;
        }
    }

    closeDropdown(dropdownId) {
        const dropdown = document.getElementById(`dropdown-${dropdownId}`);
        const button = document.querySelector(`[data-dropdown="${dropdownId}"] .nav-button__rh`);
        
        if (dropdown && button) {
            dropdown.classList.remove('show');
            button.setAttribute('aria-expanded', 'false');
        }
        
        if (this.activeDropdown === dropdownId) {
            this.activeDropdown = null;
        }
    }

    closeAllDropdowns() {
        // Close desktop dropdowns
        const allDropdowns = document.querySelectorAll('.dropdown-menu__rh');
        allDropdowns.forEach(dropdown => {
            dropdown.classList.remove('show');
        });

        const allButtons = document.querySelectorAll('.nav-button__rh:not(.nav-link__rh)');
        allButtons.forEach(button => {
            button.setAttribute('aria-expanded', 'false');
        });

        // Close mobile dropdowns
        const allMobileDropdowns = document.querySelectorAll('.mobile-dropdown__rh');
        allMobileDropdowns.forEach(dropdown => {
            dropdown.classList.remove('show');
        });

        const allMobileArrows = document.querySelectorAll('.mobile-nav-button__rh:not(.mobile-nav-link__rh) .dropdown-arrow__rh');
        allMobileArrows.forEach(arrow => {
            arrow.style.transform = 'rotate(0deg)';
        });

        this.activeDropdown = null;
    }

    toggleMobileMenu() {
        const mobileMenu = document.getElementById('mobile-menu');
        const mobileMenuButton = document.querySelector('.mobile-menu-button__rh');
        
        if (!mobileMenu || !mobileMenuButton) return;

        this.isMobileMenuOpen = !this.isMobileMenuOpen;
        
        if (this.isMobileMenuOpen) {
            mobileMenu.classList.add('show');
            mobileMenuButton.classList.add('active');
            mobileMenuButton.setAttribute('aria-expanded', 'true');
            // Prevent body scroll when mobile menu is open
            document.body.style.overflow = 'hidden';
        } else {
            mobileMenu.classList.remove('show');
            mobileMenuButton.classList.remove('active');
            mobileMenuButton.setAttribute('aria-expanded', 'false');
            document.body.style.overflow = '';
            // Close all mobile dropdowns when closing mobile menu
            this.closeAllDropdowns();
        }
    }

    closeMobileMenu() {
        if (this.isMobileMenuOpen) {
            this.toggleMobileMenu();
        }
    }

    setupClickOutside() {
        document.addEventListener('click', (event) => {
            const target = event.target;
            
            // Check if click is outside header
            const header = document.querySelector('.header__rh');
            if (!header.contains(target)) {
                this.closeAllDropdowns();
                return;
            }

            // Check if click is outside dropdown areas
            const isDropdownClick = target.closest('.nav-item__rh') || 
                                  target.closest('.dropdown-menu__rh') ||
                                  target.closest('.mobile-nav-item__rh') ||
                                  target.closest('.mobile-dropdown__rh');
            
            if (!isDropdownClick) {
                this.closeAllDropdowns();
            }
        });
    }

    handleKeyboard(event) {
        switch (event.key) {
            case 'Escape':
                this.closeAllDropdowns();
                this.closeMobileMenu();
                break;
            case 'Tab':
                // Close dropdowns when tabbing away
                setTimeout(() => {
                    const activeElement = document.activeElement;
                    const header = document.querySelector('.header__rh');
                    if (!header.contains(activeElement)) {
                        this.closeAllDropdowns();
                    }
                }, 0);
                break;
        }
    }

    // Public methods for external use
    openDesktopDropdown(dropdownId) {
        this.closeAllDropdowns();
        this.openDropdown(dropdownId);
    }

    closeDesktopDropdown(dropdownId) {
        this.closeDropdown(dropdownId);
    }

    toggleDesktopDropdown(dropdownId) {
        if (this.activeDropdown === dropdownId) {
            this.closeDropdown(dropdownId);
        } else {
            this.openDesktopDropdown(dropdownId);
        }
    }
}

// Initialize header when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    window.careAcademiaHeader = new CareAcademiaHeader();
});

// Handle window resize for mobile menu
window.addEventListener('resize', () => {
    if (window.innerWidth >= 1024) {
        // Close mobile menu on desktop
        const mobileMenu = document.getElementById('mobile-menu');
        const mobileMenuButton = document.querySelector('.mobile-menu-button__rh');
        
        if (mobileMenu && mobileMenu.classList.contains('show')) {
            mobileMenu.classList.remove('show');
            mobileMenuButton.classList.remove('active');
            mobileMenuButton.setAttribute('aria-expanded', 'false');
            document.body.style.overflow = '';
        }
    }
});

// Search functionality - now handled by Shopify's native form submission
// The search forms will automatically submit to {{ routes.search_url }} when Enter is pressed

// Smooth scroll prevention during mobile menu animation
document.addEventListener('touchmove', (event) => {
    const mobileMenu = document.getElementById('mobile-menu');
    if (mobileMenu && mobileMenu.classList.contains('show')) {
        if (!mobileMenu.contains(event.target)) {
            event.preventDefault();
        }
    }
}, { passive: false });
    </script>